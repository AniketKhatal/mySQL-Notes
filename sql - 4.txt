JOINS :-

SQL> select * from emp;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

14 rows selected.

SQL> select * from dept;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON

When we required information from more than one table in the database we use joins

Purpose of joins is to retrieving data spread across the tables

select * from emp,dept;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO     DEPTNO DNAME          LOC         
---------- ---------- --------- ---------- --------- ---------- ---------- ---------- ---------- -------------- -------------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20         10 ACCOUNTING     NEW YORK      
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30         10 ACCOUNTING     NEW YORK      
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30         10 ACCOUNTING     NEW YORK      
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20         10 ACCOUNTING     NEW YORK      
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30         10 ACCOUNTING     NEW YORK      
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30         10 ACCOUNTING     NEW YORK      
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10         10 ACCOUNTING     NEW YORK      
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20         10 ACCOUNTING     NEW YORK      
      7839 KING       PRESIDENT            17-NOV-81       5000                    10         10 ACCOUNTING     NEW YORK      
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30         10 ACCOUNTING     NEW YORK      
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20         10 ACCOUNTING     NEW YORK      
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30         10 ACCOUNTING     NEW YORK      
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20         10 ACCOUNTING     NEW YORK      
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10         10 ACCOUNTING     NEW YORK      
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20         20 RESEARCH       DALLAS        
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30         20 RESEARCH       DALLAS        
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30         20 RESEARCH       DALLAS        
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20         20 RESEARCH       DALLAS        
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30         20 RESEARCH       DALLAS        
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30         20 RESEARCH       DALLAS        
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10         20 RESEARCH       DALLAS        
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20         20 RESEARCH       DALLAS        
      7839 KING       PRESIDENT            17-NOV-81       5000                    10         20 RESEARCH       DALLAS        
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30         20 RESEARCH       DALLAS        
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20         20 RESEARCH       DALLAS        
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30         20 RESEARCH       DALLAS        
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20         20 RESEARCH       DALLAS        
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10         20 RESEARCH       DALLAS        
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20         30 SALES          CHICAGO       
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30         30 SALES          CHICAGO       
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30         30 SALES          CHICAGO       
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20         30 SALES          CHICAGO       
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30         30 SALES          CHICAGO       
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30         30 SALES          CHICAGO       
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10         30 SALES          CHICAGO       
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20         30 SALES          CHICAGO       
      7839 KING       PRESIDENT            17-NOV-81       5000                    10         30 SALES          CHICAGO       
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30         30 SALES          CHICAGO       
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20         30 SALES          CHICAGO       
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30         30 SALES          CHICAGO       
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20         30 SALES          CHICAGO       
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10         30 SALES          CHICAGO       
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20         40 OPERATIONS     BOSTON        
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30         40 OPERATIONS     BOSTON        
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30         40 OPERATIONS     BOSTON        
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20         40 OPERATIONS     BOSTON        
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30         40 OPERATIONS     BOSTON        
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30         40 OPERATIONS     BOSTON        
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10         40 OPERATIONS     BOSTON        
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20         40 OPERATIONS     BOSTON        
      7839 KING       PRESIDENT            17-NOV-81       5000                    10         40 OPERATIONS     BOSTON        
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30         40 OPERATIONS     BOSTON        
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20         40 OPERATIONS     BOSTON        
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30         40 OPERATIONS     BOSTON        
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20         40 OPERATIONS     BOSTON        
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10         40 OPERATIONS     BOSTON        

 56 rows selected 

- When all rows of table1 is joined to all rows of table2

- When join condition is omitted / invalid

then cartesian product will be formed

To avoid cartesian product we must include valid join condition in "where" clause

Actually joins performed by "where" clause itself

select columnlist
from table1,table2,..
where table1.columnname = table2.columnname;

To join n number of tables together we must include atleast n-1 join conditions

select columnlist
from table1,table2,table3,..
where table1.columnname = table2.columnname and table2.columnname = table3.columnname;

Types of joins :-

Simple join

	Equi join
	Non-equi join

Self join

Outer join
	Left outer join
	Right outer join
	Full outer join


Equi join :-

Equi join is also called as INNER JOIN

Equi join performed on equalities only

When tables having common column , foreign key, primary key then we write equi join to retrieving data spread across the tables

EMP		DEPT

empno		deptno
ename		dname
job		loc
sal
comm
deptno

EMP.DEPTNO = DEPT.DEPTNO

VENDOR_MASTER			ORDER_MASTER			ORDER_DETAIL

vencode				orderno				orderno
venname				odate				qty_ord
venaddress			del_date			qty_deld
venmobile			o_status			itemcode
ventype				vencode

select * from vendor_master,order_master,order_detail
where vendor_master.vencode = order_master.vencode and order_master.orderno = order_detail.orderno;

select venname,venaddress,venmobile,ventype,odate,del_date,o_status,qty_ord,qty_deld
from vendor_master inner join order_detail.vencode 
inner join order_master.orderno = order_detail.orderno;


SQL> select empno,ename,job,sal,dname,loc
  2  from emp,dept where emp.deptno = dept.deptno;

     EMPNO ENAME      JOB              SAL DNAME          LOC
---------- ---------- --------- ---------- -------------- -------------
      7782 CLARK      MANAGER         2450 ACCOUNTING     NEW YORK
      7839 KING       PRESIDENT       5000 ACCOUNTING     NEW YORK
      7934 MILLER     CLERK           1300 ACCOUNTING     NEW YORK
      7566 JONES      MANAGER         2975 RESEARCH       DALLAS
      7902 FORD       ANALYST         3000 RESEARCH       DALLAS
      7876 ADAMS      CLERK           1100 RESEARCH       DALLAS
      7369 SMITH      CLERK            800 RESEARCH       DALLAS
      7788 SCOTT      ANALYST         3000 RESEARCH       DALLAS
      7521 WARD       SALESMAN        1250 SALES          CHICAGO
      7844 TURNER     SALESMAN        1500 SALES          CHICAGO
      7499 ALLEN      SALESMAN        1600 SALES          CHICAGO

     EMPNO ENAME      JOB              SAL DNAME          LOC
---------- ---------- --------- ---------- -------------- -------------
      7900 JAMES      CLERK            950 SALES          CHICAGO
      7698 BLAKE      MANAGER         2850 SALES          CHICAGO
      7654 MARTIN     SALESMAN        1250 SALES          CHICAGO

14 rows selected.

SQL> select empno,ename,job,sal,dname,loc
  2  from emp inner join dept on emp.deptno = dept.deptno;

     EMPNO ENAME      JOB              SAL DNAME          LOC
---------- ---------- --------- ---------- -------------- -------------
      7782 CLARK      MANAGER         2450 ACCOUNTING     NEW YORK
      7839 KING       PRESIDENT       5000 ACCOUNTING     NEW YORK
      7934 MILLER     CLERK           1300 ACCOUNTING     NEW YORK
      7566 JONES      MANAGER         2975 RESEARCH       DALLAS
      7902 FORD       ANALYST         3000 RESEARCH       DALLAS
      7876 ADAMS      CLERK           1100 RESEARCH       DALLAS
      7369 SMITH      CLERK            800 RESEARCH       DALLAS
      7788 SCOTT      ANALYST         3000 RESEARCH       DALLAS
      7521 WARD       SALESMAN        1250 SALES          CHICAGO
      7844 TURNER     SALESMAN        1500 SALES          CHICAGO
      7499 ALLEN      SALESMAN        1600 SALES          CHICAGO

     EMPNO ENAME      JOB              SAL DNAME          LOC
---------- ---------- --------- ---------- -------------- -------------
      7900 JAMES      CLERK            950 SALES          CHICAGO
      7698 BLAKE      MANAGER         2850 SALES          CHICAGO
      7654 MARTIN     SALESMAN        1250 SALES          CHICAGO

14 rows selected.

SQL> select empno,ename,job,sal,deptno,dname,loc
  2  from emp inner join dept on emp.deptno = dept.deptno;
select empno,ename,job,sal,deptno,dname,loc
                           *
ERROR at line 1:
ORA-00918: column ambiguously defined


If the same columnname appears in two tables then we prefix the columnname with either tablename / tablealias to prevent column ambiguity

SQL> select empno,ename,job,sal,emp.deptno,dept.deptno,dname,loc
  2  from emp inner join dept on emp.deptno = dept.deptno;

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7782 CLARK      MANAGER         2450         10         10 ACCOUNTING     NEW YORK
      7839 KING       PRESIDENT       5000         10         10 ACCOUNTING     NEW YORK
      7934 MILLER     CLERK           1300         10         10 ACCOUNTING     NEW YORK
      7566 JONES      MANAGER         2975         20         20 RESEARCH       DALLAS
      7902 FORD       ANALYST         3000         20         20 RESEARCH       DALLAS
      7876 ADAMS      CLERK           1100         20         20 RESEARCH       DALLAS
      7369 SMITH      CLERK            800         20         20 RESEARCH       DALLAS
      7788 SCOTT      ANALYST         3000         20         20 RESEARCH       DALLAS
      7521 WARD       SALESMAN        1250         30         30 SALES          CHICAGO
      7844 TURNER     SALESMAN        1500         30         30 SALES          CHICAGO
      7499 ALLEN      SALESMAN        1600         30         30 SALES          CHICAGO

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7900 JAMES      CLERK            950         30         30 SALES          CHICAGO
      7698 BLAKE      MANAGER         2850         30         30 SALES          CHICAGO
      7654 MARTIN     SALESMAN        1250         30         30 SALES          CHICAGO

14 rows selected.

SQL> select empno,ename,job,sal,e.deptno,d.deptno,dname,loc
  2  from emp e inner join dept d on e.deptno = d.deptno;

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7782 CLARK      MANAGER         2450         10         10 ACCOUNTING     NEW YORK
      7839 KING       PRESIDENT       5000         10         10 ACCOUNTING     NEW YORK
      7934 MILLER     CLERK           1300         10         10 ACCOUNTING     NEW YORK
      7566 JONES      MANAGER         2975         20         20 RESEARCH       DALLAS
      7902 FORD       ANALYST         3000         20         20 RESEARCH       DALLAS
      7876 ADAMS      CLERK           1100         20         20 RESEARCH       DALLAS
      7369 SMITH      CLERK            800         20         20 RESEARCH       DALLAS
      7788 SCOTT      ANALYST         3000         20         20 RESEARCH       DALLAS
      7521 WARD       SALESMAN        1250         30         30 SALES          CHICAGO
      7844 TURNER     SALESMAN        1500         30         30 SALES          CHICAGO
      7499 ALLEN      SALESMAN        1600         30         30 SALES          CHICAGO

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7900 JAMES      CLERK            950         30         30 SALES          CHICAGO
      7698 BLAKE      MANAGER         2850         30         30 SALES          CHICAGO
      7654 MARTIN     SALESMAN        1250         30         30 SALES          CHICAGO

14 rows selected.

SQL> select e.empno,e.ename,e.job,e.sal,e.deptno,d.deptno,d.dname,d.loc
  2  from emp e inner join dept d on e.deptno = d.deptno;

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7782 CLARK      MANAGER         2450         10         10 ACCOUNTING     NEW YORK
      7839 KING       PRESIDENT       5000         10         10 ACCOUNTING     NEW YORK
      7934 MILLER     CLERK           1300         10         10 ACCOUNTING     NEW YORK
      7566 JONES      MANAGER         2975         20         20 RESEARCH       DALLAS
      7902 FORD       ANALYST         3000         20         20 RESEARCH       DALLAS
      7876 ADAMS      CLERK           1100         20         20 RESEARCH       DALLAS
      7369 SMITH      CLERK            800         20         20 RESEARCH       DALLAS
      7788 SCOTT      ANALYST         3000         20         20 RESEARCH       DALLAS
      7521 WARD       SALESMAN        1250         30         30 SALES          CHICAGO
      7844 TURNER     SALESMAN        1500         30         30 SALES          CHICAGO
      7499 ALLEN      SALESMAN        1600         30         30 SALES          CHICAGO

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7900 JAMES      CLERK            950         30         30 SALES          CHICAGO
      7698 BLAKE      MANAGER         2850         30         30 SALES          CHICAGO
      7654 MARTIN     SALESMAN        1250         30         30 SALES          CHICAGO

14 rows selected.

SQL> select d.dname,min(e.sal) "Min Salary",max(e.sal) "Max Salary"
  2  from emp e inner join dept d on e.deptno = d.deptno
  3  group by d.dname;

DNAME          Min Salary Max Salary
-------------- ---------- ----------
ACCOUNTING           1300       5000
RESEARCH              800       3000
SALES                 950       2850

Here e and d are tablealiases

Tablealias is an aliasname for an entire table

Tablealias act like a table

==================================================================================================

Products :-

Prodid
Prodname
Prod_category
MFG_date
EXP_date
Prodcost

Vendors :-

vencode 
venname
odate
del_date
o_status
prodid

==============================================================================================

table: salesman

salesman_id |    name    |   city   | commission 
-------------+------------+----------+------------
        5001 | James Hoog | New York |       0.15
        5002 | Nail Knite | Paris    |       0.13
        5005 | Pit Alex   | London   |       0.11
        5006 | Mc Lyon    | Paris    |       0.14
        5007 | Paul Adam  | Rome     |       0.13
        5003 | Lauson Hen | San Jose |       0.12

table: customer

customer_id |   cust_name    |    city    | grade | salesman_id 
-------------+----------------+------------+-------+-------------
        3002 | Nick Rimando   | New York   |   100 |        5001
        3007 | Brad Davis     | New York   |   200 |        5001
        3005 | Graham Zusi    | California |   200 |        5002
        3008 | Julian Green   | London     |   300 |        5002
        3004 | Fabian Johnson | Paris      |   300 |        5006
        3009 | Geoff Cameron  | Berlin     |   100 |        5003
        3003 | Jozy Altidor   | Moscow     |   200 |        5007
        3001 | Brad Guzan     | London     |       |        5005

1. Write a SQL statement to prepare a list with salesman name, customer name and their cities for the salesmen and customer who belongs to the same city.

================================================================================================

NON-EQUI join :-

Non-equi join performed by all relational operators like <  >  <=  >=  <> other than(=)

For all different columns in a table we write non-equi join to retrieving data spread across the tables


SQL> select * from emp;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

14 rows selected.

SQL> select * from salgrade;

     GRADE      LOSAL      HISAL
---------- ---------- ----------
         1        700       1200
         2       1201       1400
         3       1401       2000
         4       2001       3000
         5       3001       9999


SQL> select * from emp,salgrade where sal >= losal and sal <=hisal;

SQL> select empno,ename,job,sal,grade
  2  from emp,salgrade where sal >= losal and sal <= hisal;

     EMPNO ENAME      JOB              SAL      GRADE
---------- ---------- --------- ---------- ----------
      7369 SMITH      CLERK            800          1
      7900 JAMES      CLERK            950          1
      7876 ADAMS      CLERK           1100          1
      7521 WARD       SALESMAN        1250          2
      7654 MARTIN     SALESMAN        1250          2
      7934 MILLER     CLERK           1300          2
      7844 TURNER     SALESMAN        1500          3
      7499 ALLEN      SALESMAN        1600          3
      7782 CLARK      MANAGER         2450          4
      7698 BLAKE      MANAGER         2850          4
      7566 JONES      MANAGER         2975          4

     EMPNO ENAME      JOB              SAL      GRADE
---------- ---------- --------- ---------- ----------
      7788 SCOTT      ANALYST         3000          4
      7902 FORD       ANALYST         3000          4
      7839 KING       PRESIDENT       5000          5

14 rows selected.

SQL> select empno,ename,job,sal,grade
  2  from emp,salgrade
  3  where emp.sal >= salgrade.losal and emp.sal <= salgrade.hisal;

     EMPNO ENAME      JOB              SAL      GRADE
---------- ---------- --------- ---------- ----------
      7369 SMITH      CLERK            800          1
      7900 JAMES      CLERK            950          1
      7876 ADAMS      CLERK           1100          1
      7521 WARD       SALESMAN        1250          2
      7654 MARTIN     SALESMAN        1250          2
      7934 MILLER     CLERK           1300          2
      7844 TURNER     SALESMAN        1500          3
      7499 ALLEN      SALESMAN        1600          3
      7782 CLARK      MANAGER         2450          4
      7698 BLAKE      MANAGER         2850          4
      7566 JONES      MANAGER         2975          4

     EMPNO ENAME      JOB              SAL      GRADE
---------- ---------- --------- ---------- ----------
      7788 SCOTT      ANALYST         3000          4
      7902 FORD       ANALYST         3000          4
      7839 KING       PRESIDENT       5000          5

14 rows selected.

SQL> select empno,ename,job,sal,grade
  2  from emp,salgrade
  3  where emp.sal between salgrade.losal and salgrade.hisal;

     EMPNO ENAME      JOB              SAL      GRADE
---------- ---------- --------- ---------- ----------
      7369 SMITH      CLERK            800          1
      7900 JAMES      CLERK            950          1
      7876 ADAMS      CLERK           1100          1
      7521 WARD       SALESMAN        1250          2
      7654 MARTIN     SALESMAN        1250          2
      7934 MILLER     CLERK           1300          2
      7844 TURNER     SALESMAN        1500          3
      7499 ALLEN      SALESMAN        1600          3
      7782 CLARK      MANAGER         2450          4
      7698 BLAKE      MANAGER         2850          4
      7566 JONES      MANAGER         2975          4

     EMPNO ENAME      JOB              SAL      GRADE
---------- ---------- --------- ---------- ----------
      7788 SCOTT      ANALYST         3000          4
      7902 FORD       ANALYST         3000          4
      7839 KING       PRESIDENT       5000          5

14 rows selected.

SQL> select e.empno,e.ename,e.job,e.sal,s.grade
  2  from emp e,salgrade s
  3  where e.sal between s.losal and s.hisal;

     EMPNO ENAME      JOB              SAL      GRADE
---------- ---------- --------- ---------- ----------
      7369 SMITH      CLERK            800          1
      7900 JAMES      CLERK            950          1
      7876 ADAMS      CLERK           1100          1
      7521 WARD       SALESMAN        1250          2
      7654 MARTIN     SALESMAN        1250          2
      7934 MILLER     CLERK           1300          2
      7844 TURNER     SALESMAN        1500          3
      7499 ALLEN      SALESMAN        1600          3
      7782 CLARK      MANAGER         2450          4
      7698 BLAKE      MANAGER         2850          4
      7566 JONES      MANAGER         2975          4

     EMPNO ENAME      JOB              SAL      GRADE
---------- ---------- --------- ---------- ----------
      7788 SCOTT      ANALYST         3000          4
      7902 FORD       ANALYST         3000          4
      7839 KING       PRESIDENT       5000          5

14 rows selected.

Here e and s are tablealiases for emp,salgrade tables

Tablealias act like a table

----------------------------------------------------------------------------------

table: salesman

salesman_id |    name    |   city   | commission 
-------------+------------+----------+------------
        5001 | James Hoog | New York |       0.15
        5002 | Nail Knite | Paris    |       0.13
        5005 | Pit Alex   | London   |       0.11
        5006 | Mc Lyon    | Paris    |       0.14
        5007 | Paul Adam  | Rome     |       0.13
        5003 | Lauson Hen | San Jose |       0.12

table: customer

customer_id |   cust_name    |    city    | grade | salesman_id 
-------------+----------------+------------+-------+-------------
        3002 | Nick Rimando   | New York   |   100 |        5001
        3007 | Brad Davis     | New York   |   200 |        5001
        3005 | Graham Zusi    | California |   200 |        5002
        3008 | Julian Green   | London     |   300 |        5002
        3004 | Fabian Johnson | Paris      |   300 |        5006
        3009 | Geoff Cameron  | Berlin     |   100 |        5003
        3003 | Jozy Altidor   | Moscow     |   200 |        5007
        3001 | Brad Guzan     | London     |       |        5005

table: orders

ord_no      purch_amt   ord_date    customer_id  salesman_id
----------  ----------  ----------  -----------  -----------
70001       150.5       2012-10-05  3005         5002
70009       270.65      2012-09-10  3001         5005
70002       65.26       2012-10-05  3002         5001
70004       110.5       2012-08-17  3009         5003
70007       948.5       2012-09-10  3005         5002
70005       2400.6      2012-07-27  3007         5001
70008       5760        2012-09-10  3002         5001
70010       1983.43     2012-10-10  3004         5006
70003       2480.4      2012-10-10  3009         5003
70012       250.45      2012-06-27  3008         5002
70011       75.29       2012-08-17  3003         5007
70013       3045.6      2012-04-25  3002         5001

Write a SQL statement to make a list with orderno, purchase amount, customer name and their cities for those orders which purchase amount between 500 and 2000.

==================================================================================================

SELF JOIN :-

Joining of a table to itself is known as self join

It can compare each row of the table to itself and also with other rows in the same table

SQL> select * from emp;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

14 rows selected.

SQL> select e.ename,m.ename
  2  from emp e,emp m where e.mgr = m.empno;

ENAME      ENAME
---------- ----------
FORD       JONES
SCOTT      JONES
TURNER     BLAKE
ALLEN      BLAKE
WARD       BLAKE
JAMES      BLAKE
MARTIN     BLAKE
MILLER     CLARK
ADAMS      SCOTT
BLAKE      KING
JONES      KING

ENAME      ENAME
---------- ----------
CLARK      KING
SMITH      FORD

13 rows selected.

SQL> select e.ename "Employee",m.ename "Manager"
  2  from emp e, emp m where e.mgr = m.empno;

Employee   Manager
---------- ----------
FORD       JONES
SCOTT      JONES
TURNER     BLAKE
ALLEN      BLAKE
WARD       BLAKE
JAMES      BLAKE
MARTIN     BLAKE
MILLER     CLARK
ADAMS      SCOTT
BLAKE      KING
JONES      KING

Employee   Manager
---------- ----------
CLARK      KING
SMITH      FORD

13 rows selected.

SQL> select e.ename "Employee",e.hiredate,m.ename "Manager",m.hiredate
  2  from emp e,emp m
  3  where e.mgr = m.empno;

Employee   HIREDATE  Manager    HIREDATE
---------- --------- ---------- ---------
FORD       03-DEC-81 JONES      02-APR-81
SCOTT      19-APR-87 JONES      02-APR-81
TURNER     08-SEP-81 BLAKE      01-MAY-81
ALLEN      20-FEB-81 BLAKE      01-MAY-81
WARD       22-FEB-81 BLAKE      01-MAY-81
JAMES      03-DEC-81 BLAKE      01-MAY-81
MARTIN     28-SEP-81 BLAKE      01-MAY-81
MILLER     23-JAN-82 CLARK      09-JUN-81
ADAMS      23-MAY-87 SCOTT      19-APR-87
BLAKE      01-MAY-81 KING       17-NOV-81
JONES      02-APR-81 KING       17-NOV-81

Employee   HIREDATE  Manager    HIREDATE
---------- --------- ---------- ---------
CLARK      09-JUN-81 KING       17-NOV-81
SMITH      17-DEC-80 FORD       03-DEC-81

13 rows selected.

Here e and m are tablealiases for emp table

Tablealias act like a table

=============================================================================================

OUTER JOIN :-

outer join is an extension of result of simple join

EMP		DEPT

deptno		deptno

10		10

20		20

30		30

		40

50

EMP.DEPTNO = DEPT.DEPTNO


SQL> insert into emp(empno,job,deptno) values(100,'AA',50);

1 row created.

SQL> select empno,ename,job,sal,emp.deptno,dept.deptno,dname,loc
  2  from emp left outer join dept on emp.deptno = dept.deptno;

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7934 MILLER     CLERK           1300         10         10 ACCOUNTING     NEW YORK
      7839 KING       PRESIDENT       5000         10         10 ACCOUNTING     NEW YORK
      7782 CLARK      MANAGER         2450         10         10 ACCOUNTING     NEW YORK
      7902 FORD       ANALYST         3000         20         20 RESEARCH       DALLAS
      7876 ADAMS      CLERK           1100         20         20 RESEARCH       DALLAS
      7788 SCOTT      ANALYST         3000         20         20 RESEARCH       DALLAS
      7566 JONES      MANAGER         2975         20         20 RESEARCH       DALLAS
      7369 SMITH      CLERK            800         20         20 RESEARCH       DALLAS
      7900 JAMES      CLERK            950         30         30 SALES          CHICAGO
      7844 TURNER     SALESMAN        1500         30         30 SALES          CHICAGO
      7698 BLAKE      MANAGER         2850         30         30 SALES          CHICAGO

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7654 MARTIN     SALESMAN        1250         30         30 SALES          CHICAGO
      7521 WARD       SALESMAN        1250         30         30 SALES          CHICAGO
      7499 ALLEN      SALESMAN        1600         30         30 SALES          CHICAGO
       100            AA                           50

15 rows selected.

SQL> select empno,ename,job,sal,emp.deptno,dept.deptno,dname,loc
  2  from emp right outer join dept on emp.deptno = dept.deptno;

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7782 CLARK      MANAGER         2450         10         10 ACCOUNTING     NEW YORK
      7934 MILLER     CLERK           1300         10         10 ACCOUNTING     NEW YORK
      7839 KING       PRESIDENT       5000         10         10 ACCOUNTING     NEW YORK
      7566 JONES      MANAGER         2975         20         20 RESEARCH       DALLAS
      7369 SMITH      CLERK            800         20         20 RESEARCH       DALLAS
      7788 SCOTT      ANALYST         3000         20         20 RESEARCH       DALLAS
      7902 FORD       ANALYST         3000         20         20 RESEARCH       DALLAS
      7876 ADAMS      CLERK           1100         20         20 RESEARCH       DALLAS
      7521 WARD       SALESMAN        1250         30         30 SALES          CHICAGO
      7844 TURNER     SALESMAN        1500         30         30 SALES          CHICAGO
      7499 ALLEN      SALESMAN        1600         30         30 SALES          CHICAGO

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7900 JAMES      CLERK            950         30         30 SALES          CHICAGO
      7654 MARTIN     SALESMAN        1250         30         30 SALES          CHICAGO
      7698 BLAKE      MANAGER         2850         30         30 SALES          CHICAGO
                                                              40 OPERATIONS     BOSTON

15 rows selected.

SQL> select empno,ename,job,sal,emp.deptno,dept.deptno,dname,loc
  2  from emp full outer join dept on emp.deptno = dept.deptno;

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7369 SMITH      CLERK            800         20         20 RESEARCH       DALLAS
      7499 ALLEN      SALESMAN        1600         30         30 SALES          CHICAGO
      7521 WARD       SALESMAN        1250         30         30 SALES          CHICAGO
      7566 JONES      MANAGER         2975         20         20 RESEARCH       DALLAS
      7654 MARTIN     SALESMAN        1250         30         30 SALES          CHICAGO
      7698 BLAKE      MANAGER         2850         30         30 SALES          CHICAGO
      7782 CLARK      MANAGER         2450         10         10 ACCOUNTING     NEW YORK
      7788 SCOTT      ANALYST         3000         20         20 RESEARCH       DALLAS
      7839 KING       PRESIDENT       5000         10         10 ACCOUNTING     NEW YORK
      7844 TURNER     SALESMAN        1500         30         30 SALES          CHICAGO
      7876 ADAMS      CLERK           1100         20         20 RESEARCH       DALLAS

     EMPNO ENAME      JOB              SAL     DEPTNO     DEPTNO DNAME          LOC
---------- ---------- --------- ---------- ---------- ---------- -------------- -------------
      7900 JAMES      CLERK            950         30         30 SALES          CHICAGO
      7902 FORD       ANALYST         3000         20         20 RESEARCH       DALLAS
      7934 MILLER     CLERK           1300         10         10 ACCOUNTING     NEW YORK
       100            AA                           50
                                                              40 OPERATIONS     BOSTON

16 rows selected.

==============================================================================================

Additional join methods is SETOPERATORS 

using SETOPERATORS, we can have combined information from two queries

select columnlist from table1
setoperator
select columnlist from table2;

UNION - retrieving combined information from two queries with distinct values


SQL> select deptno from emp
  2  union
  3  select deptno from dept;

    DEPTNO
----------
        10
        20
        30
        40

UNION ALL - retrieving combined information from two queries including all duplicates


SQL> select deptno from emp
  2  union all
  3  select deptno from dept;

    DEPTNO
----------
        20
        30
        30
        20
        30
        30
        10
        20
        10
        30
        20

    DEPTNO
----------
        30
        20
        10
        10
        20
        30
        40

18 rows selected.

INTERSECT - retrieving common information from two queries


SQL> select deptno from emp
  2  intersect
  3  select deptno from dept;

    DEPTNO
----------
        10
        20
        30

MINUS :-


SQL> select deptno from emp
  2  minus
  3  select deptno from dept;

no rows selected

SQL> select deptno from dept
  2  minus
  3  select deptno from emp;

    DEPTNO
----------
        40

================================================================================================


Exercise :-

1. Write a query to display the name,department number and dname for all employees

2. Create a unique listing of all jobs that are in deptno 30. Include the loc of deptno 30 in the output

3. Write a query to display the ename,dname and loc of all employees who earn a commission

4. Display the ename and dname for all employees who have an A in their name

5. Write a query to display the name,job,deptno and dname for all employees who work in DALLAS

6. Display the ename,empno along with their manager's name and manager number.

7. To display all employees including King, who has no manager

8. Create a query that will display the ename,deptno and all the employees that work in the same department as a given employee.

9. Show the structure of SALGRADE table, Create a query that will display the name,job,dname,sal, and grade for all employees

10. Create a query to display the name and hiredate of any employee hired after employee Blake.

11. Display all employee's names and hiredates along with their manager's name and hiredate for all employees who were hired before their managers.

==========================================================================================

1. Display the name of each employee with his department name.

SELECT ename, dname FROM emp INNER JOIN dept ON emp.deptno = dept.deptno;

2. Display a list of all departments with the employees in each department.

SELECT dname, ename FROM dept LEFT OUTER JOIN emp ON dept.deptno = emp.deptno;

3. Display all the departments with the manager for that department.

SELECT dname, ename FROM emp INNER JOIN dept ON emp.deptno = dept.deptno
WHERE job = 'MANAGER';

4. Display the names of each employee with the name of his/her boss.

SELECT s.ename, b.ename FROM emp s INNER JOIN emp b ON s.mgr = b.empno;

5. Display the names of each employee with the name of his/her boss with a blank for the boss of thepresident.

SELECT s.ename, b.ename FROM emp s LEFT OUTER JOIN emp b ON s.mgr = b.empno;

6. Display the employee number and name of each employee who manages other employees with the number of people he or she manages.

SELECT a.mgr, b.ename, count(a.mgr) FROM emp a INNER JOIN emp b
ON a.mgr = b.empno WHERE a.mgr IS NOT NULL GROUP BY a.mgr, b.ename;

7. Repeat the display for the last question, but this time display the rows in descending order of the number of employees managed.

SELECT a.mgr, b.ename, count(a.mgr) FROM emp a INNER JOIN emp b
ON a.mgr = b.empno WHERE a.mgr IS NOT NULL GROUP BY a.mgr, b.ename
ORDER BY count(a.mgr) DESC;

==========================================================================================

SUBQUERIES :-

- Query within another Query

- Nesting of Queries

- Inner SELECT / sub SELECT

- Subqueries are always enclosed within parenthesis

- Subqueries are evaluated first, followed by main query

- main query will be used the result of subquery

select columnlist
from tablename
where <expression> <operator>(select columnlist from tablename);

operator falls into two classes i.e

Single-row operators : <  >  <=  >=  = <>

Multiple-row operators : in , any, all

Types of subqueries :-

Single-row subqueries : that returns only one row using single-row operators

Multiple-row subqueries : that returns more than one row using multiple-row operators

Correlated subqueries

1.Find all employee details whose job title is same as that of employee 7369

SQL> select job from emp where empno=7369;

JOB
---------
CLERK

SQL> select * from emp where job='CLERK';

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

SQL> select * from emp where job=(select job from emp where empno=7369);

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

================================================================================================

2.Find all employee details whose job title is same as that of employee 7369 and whose salary is greater than that of employee 7876


SQL> select * from emp where job=(select job from emp where empno=7369) and sal >(select sal from emp where empno=7876);

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

===================================================================================================

We can include all functions,clauses into subqueries except ORDER BY clause, we cannot include ORDER BY clause into subqueries

3.Find all employee details whose salary is greater than that of employee JONES's salary


SQL> select sal from emp where ename='JONES';

       SAL
----------
      2975

SQL> select * from emp where sal >2975;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20

SQL> select * from emp where sal >(select sal from emp where ename='JONES');

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20

SQL> select * from emp where sal >(select sal from emp where ename=upper('jones'));

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20

SQL> select * from emp where sal >(select sal from emp where ename=upper('jones') order by ename);
select * from emp where sal >(select sal from emp where ename=upper('jones') order by ename)
                                                                             *
ERROR at line 1:
ORA-00907: missing right parenthesis


SQL> select * from emp where sal >(select sal from emp where ename=upper('jones')) order by ename;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20

================================================================================================

4.Find all employee details whose salary is equivalent to minimum salary of all employees


SQL> select * from emp where sal =(select min(sal) from emp);

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20

================================================================================================

5.Find the job with lowest average salary


SQL> select job,avg(sal)
  2  from emp
  3  group by job;

JOB         AVG(SAL)
--------- ----------
CLERK         1037.5
SALESMAN        1400
PRESIDENT       5000
MANAGER   2758.33333
ANALYST         3000

SQL> select min(avg(sal)) from emp group by job;

MIN(AVG(SAL))
-------------
       1037.5

SQL> select job,avg(sal)
  2  from emp
  3  group by job
  4  having avg(sal) =(select min(avg(sal)) from emp group by job);

JOB         AVG(SAL)
--------- ----------
CLERK         1037.5

===============================================================================================

1.Find all employee details whose salary is in the list of all minimum salaries of all departments


SQL> select min(sal)
  2  from emp group by deptno;

  MIN(SAL)
----------
       950
       800
      1300

SQL> select * from emp where sal in(800,950,1300);

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

SQL> select * from emp where sal in(select min(sal) from emp group by deptno);

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

SQL> select * from emp where sal =(select min(sal) from emp group by deptno);
select * from emp where sal =(select min(sal) from emp group by deptno)
                              *
ERROR at line 1:
ORA-01427: single-row subquery returns more than one row


SQL> select * from emp where sal =any(select min(sal) from emp group by deptno);

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

===============================================================================================

2.Find all employee details whose salary is less than any CLERK's salary and who are not CLERK


SQL> select * from emp where sal <any(select sal from emp where job='CLERK') and job<>'CLERK';

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30

===============================================================================================

3.Find all employee details whose salary is greater than all average salaries of all departments


SQL> select avg(sal) from emp group by deptno;

  AVG(SAL)
----------
1566.66667
      2175
2916.66667

SQL> select * from emp where sal >all(select avg(sal) from emp group by deptno);

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10

================================================================================================

CORRELATED SUBQUERIES :-

Subquery evaluated once for an entire table

Correlated subquery evaluated once for each row in a table

If we want to retrieving data from one table that depends on logical existance in another table then we write correlated subquery


SQL> select * from dept;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON

SQL> select * from dept where exists(select * from emp where emp.deptno = dept.deptno);

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO

SQL> select * from dept where not exists(select * from emp where emp.deptno = dept.deptno);

    DEPTNO DNAME          LOC
---------- -------------- -------------
        40 OPERATIONS     BOSTON

=====================================================================================================

Exercise:-

1.write a query to display the employee name and hiredate for all employees in the same department as Blake

2.Create a query to display the employee number and name for all employees who earn more than the average salary.

3.write a query that will display the employee number and name for all employees who work in a department with any employee whose name contains a T.

4.Display the employee name,department number and job for all employees whose department location is Dallas

5.Display the employee name and salary of all employees who report to King

6.Display the department number,name and job for all employees in the sales department

7.Display the employee number and salary for all employees who earn more than the average salary and who work in a department with any employee with a T in their name.

---------------------------------------------------------------------------------------

1. Display the names and job titles of all employees with the same job as Jones.

SELECT ename, job FROM emp
WHERE job = (SELECT job FROM emp WHERE ename = 'JONES');

2. Display the names and department name of all employees working in the same city as Jones.

SELECT ename, dname FROM emp INNER JOIN dept ON emp.deptno = DEPT.deptno
WHERE loc = (SELECT loc FROM emp INNER JOIN dept ON emp.deptno = DEPT.deptno
WHERE ename = 'JONES');


3. Display the name of the employee whose salary is the lowest.

SELECT ename FROM emp WHERE sal = (SELECT min(sal) FROM emp);

4. Display the names of all employees except the lowest paid.

SELECT ename FROM emp WHERE sal > (SELECT min(sal) FROM emp);


5. Display the names of all employees whose job title is the same as anyone in the sales dept.

SELECT ename FROM emp WHERE job IN (SELECT DISTINCT job FROM emp INNER JOIN dept

ON emp.deptno = DEPT.deptno WHERE dname = 'SALES');


6. Display the names of all employees who work in a department that employs an analyst.

SELECT ename FROM emp WHERE deptno IN (SELECT DISTINCT emp.deptno
FROM emp INNER JOIN dept ON emp.deptno = dept.deptno WHERE job = 'ANALYST');


7. Display the names of all employees with their job title, their current salary and their salary following a 10% pay rise for clerks and a 7% pay rise for all other employees.

SELECT ename, job, sal, 1.1 * sal AS "newsal" FROM emp WHERE job = 'CLERK' UNION
SELECT ename, job, sal, 1.07 * sal AS "newsal" FROM emp WHERE job <> 'CLERK';


8. Display the names of all employees with their salary and commission earned. Employees with a nullcommission eld should have 0 in the commission column.

SELECT ename, sal, comm FROM emp WHERE comm IS NOT NULL
UNION SELECT ename, sal, 0 FROM emp WHERE comm IS NULL;

9. Display the names of ALL employees with the total they have earned (ie. salary plus commission).


SELECT ename, sal + comm AS "earnings" FROM emp WHERE comm IS NOT NULL
UNION SELECT ename, sal FROM emp WHERE comm IS NULL;


10. Repeat the display for the last question but this time display in descending order of earnings.


SELECT ename, sal + comm AS "earnings" FROM emp WHERE comm IS NOT NULL
UNION SELECT ename, sal FROM emp WHERE comm IS NULL ORDER BY earnings DESC;

========================================================================================

table: salesman

salesman_id |    name    |   city   | commission 
-------------+------------+----------+------------
        5001 | James Hoog | New York |       0.15
        5002 | Nail Knite | Paris    |       0.13
        5005 | Pit Alex   | London   |       0.11
        5006 | Mc Lyon    | Paris    |       0.14
        5007 | Paul Adam  | Rome     |       0.13
        5003 | Lauson Hen | San Jose |       0.12

table: customer

customer_id |   cust_name    |    city    | grade | salesman_id 
-------------+----------------+------------+-------+-------------
        3002 | Nick Rimando   | New York   |   100 |        5001
        3007 | Brad Davis     | New York   |   200 |        5001
        3005 | Graham Zusi    | California |   200 |        5002
        3008 | Julian Green   | London     |   300 |        5002
        3004 | Fabian Johnson | Paris      |   300 |        5006
        3009 | Geoff Cameron  | Berlin     |   100 |        5003
        3003 | Jozy Altidor   | Moscow     |   200 |        5007
        3001 | Brad Guzan     | London     |       |        5005

table: orders

ord_no      purch_amt   ord_date    customer_id  salesman_id
----------  ----------  ----------  -----------  -----------
70001       150.5       2012-10-05  3005         5002
70009       270.65      2012-09-10  3001         5005
70002       65.26       2012-10-05  3002         5001
70004       110.5       2012-08-17  3009         5003
70007       948.5       2012-09-10  3005         5002
70005       2400.6      2012-07-27  3007         5001
70008       5760        2012-09-10  3002         5001
70010       1983.43     2012-10-10  3004         5006
70003       2480.4      2012-10-10  3009         5003
70012       250.45      2012-06-27  3008         5002
70011       75.29       2012-08-17  3003         5007
70013       3045.6      2012-04-25  3002         5001

1. Write a SQL statement to prepare a list with salesman name, customer name and their cities for the salesmen and customer who belongs to the same city.

2. Write a SQL statement to make a list with order no, purchase amount, customer name and their cities for those orders which order amount between 500 and 2000. 

3. Write a SQL statement to know which salesman are working for which customer.

4. Write a SQL statement to find the list of customers who appointed a salesman for their jobs who gets a commission from the company is more than 12%.

5. Write a SQL statement to find the list of customers who appointed a salesman for their jobs who does not live in the same city where their customer lives, and gets a commission is above 12%

6. Write a SQL statement to find the details of a order i.e. order number, order date, amount of order, which customer gives the order and which salesman works for that customer and commission rate he gets for an order.

7. Write a SQL statement to make a join on the tables salesman, customer and orders in such a form that the same column of each table will appear once and only the relational rows will come. 

8. Write a SQL statement to make a list in ascending order for the customer who works either through a salesman or by own.

9. Write a SQL statement to make a list in ascending order for the customer who holds a grade less than 300 and works either through a salesman or by own.

10. Write a SQL statement to make a report with customer name, city, order number, order date, and order amount in ascending order according to the order date to find that either any of the existing customers have placed no order or placed one or more orders. 

11. Write a SQL statement to make a report with customer name, city, order number, order date, order amount salesman name and commission to find that either any of the existing customers have placed no order or placed one or more orders by their salesman or by own.

12. Write a SQL statement to make a list in ascending order for the salesmen who works either for one or more customer or not yet join under any of the customers. 

13. Write a SQL statement to make a list for all salesmen along with customer name, city, grade, order number, date, and amount.

14. Write a SQL statement to make a list for the salesmen who either work for one or more customers or yet to join any of the customer. The customer may have placed, either one or more orders on or above order amount 2000 and must have a grade, or he may not have placed any order to the associated supplier. 

15. Write a SQL statement to make a report with customer name, city, order no. order date, purchase amount for those customers from the existing list who placed one or more orders or which order(s) have been placed by the customer who is not on the list.

16. Write a SQL statement to make a report with customer name, city, order no. order date, purchase amount for only those customers on the list who must have a grade and placed one or more orders or which order(s) have been placed by the customer who is neither in the list nor have a grade.

17. Write a SQL statement to make a cartesian product between salesman and customer i.e. each salesman will appear for all customer and vice versa.

18. Write a SQL statement to make a cartesian product between salesman and customer i.e. each salesman will appear for all customer and vice versa for that salesman who belongs to a city.

19. Write a SQL statement to make a cartesian product between salesman and customer i.e. each salesman will appear for all customer and vice versa for those salesmen who belongs to a city and the customers who must have a grade.

20. Write a SQL statement to make a cartesian product between salesman and customer i.e. each salesman will appear for all customer and vice versa for those salesmen who must belong a city which is not the same as his customer and the customers should have an own grade.

=============================================================